{"ast":null,"code":"var _jsxFileName = \"/home/anderson/first-react-app/my-app/src/Tasks/Tasks.js\";\nimport React from 'react';\nimport { ReactPropTypes } from 'react';\nimport { useState } from 'react';\nimport Modal from '../component/Modal/Modal';\nimport Button from '../component/Button/Button';\nimport Task from './Task/Task';\nimport './Tasks.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tasks = onClick => {\n  // const [isModalOpened, setIsModalOpened] = useState(false);\n\n  // const openModal = () => {\n  //     setIsModalOpened(true);\n  // };\n\n  // const closeModal = () => {\n  //     setIsModalOpened(false);\n  // };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks\",\n    children: [/*#__PURE__*/_jsxDEV(Task, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: openModal,\n      children: \"Show modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), isModalOpened && /*#__PURE__*/_jsxDEV(Modal, {\n      closeModal: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_c = Tasks;\nTasks.propTypes = {\n  // closeModal: setIsModalOpened(false)\n};\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","ReactPropTypes","useState","Modal","Button","Task","jsxDEV","_jsxDEV","Tasks","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","openModal","isModalOpened","closeModal","_c","propTypes","$RefreshReg$"],"sources":["/home/anderson/first-react-app/my-app/src/Tasks/Tasks.js"],"sourcesContent":["import React from 'react';\nimport { ReactPropTypes } from 'react';\nimport { useState } from 'react';\n\nimport Modal from '../component/Modal/Modal';\nimport Button from '../component/Button/Button';\nimport Task from './Task/Task';\nimport './Tasks.scss'\n\nconst Tasks = (onClick) => {\n\n    // const [isModalOpened, setIsModalOpened] = useState(false);\n\n    // const openModal = () => {\n    //     setIsModalOpened(true);\n    // };\n\n    // const closeModal = () => {\n    //     setIsModalOpened(false);\n    // };\n    return (\n        <div className='tasks'>\n            <Task></Task>\n            <Button onClick={openModal}>\n                Show modal\n            </Button>\n            {isModalOpened && <Modal closeModal={closeModal} />}\n            \n        </div>\n    );\n};\n\nTasks.propTypes = {\n    // closeModal: setIsModalOpened(false)\n};\n\nexport default Tasks;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,OAAO;AACtC,SAASC,QAAQ,QAAQ,OAAO;AAEhC,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAO,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,KAAK,GAAIC,OAAO,IAAK;EAEvB;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA,oBACIF,OAAA;IAAKG,SAAS,EAAC,OAAO;IAAAC,QAAA,gBAClBJ,OAAA,CAACF,IAAI;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,eACbR,OAAA,CAACH,MAAM;MAACK,OAAO,EAAEO,SAAU;MAAAL,QAAA,EAAC;IAE5B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,EACRE,aAAa,iBAAIV,OAAA,CAACJ,KAAK;MAACe,UAAU,EAAEA;IAAW;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEjD;AAEd,CAAC;AAACI,EAAA,GArBIX,KAAK;AAuBXA,KAAK,CAACY,SAAS,GAAG;EACd;AAAA,CACH;AAED,eAAeZ,KAAK;AAAC,IAAAW,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}