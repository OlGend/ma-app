{"ast":null,"code":"var _jsxFileName = \"/home/anderson/first-react-app/my-app/src/Tasks/Tasks.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\n// import { ReactPropTypes } from 'react';\nimport { useState } from 'react';\nimport Modal from '../component/Modal/Modal';\nimport Button from '../component/Button/Button';\nimport Task from '../component/Task/Task';\nimport './Tasks.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tasks = () => {\n  _s();\n  const [isModalOpened, setIsModalOpened] = useState(false);\n  const openModal = () => {\n    setIsModalOpened(true);\n  };\n  const closeModal = () => {\n    setIsModalOpened(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks\",\n    children: [/*#__PURE__*/_jsxDEV(Task, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: openModal,\n      children: \"Show modal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), isModalOpened && console]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(Tasks, \"MdbwFspO4bR4qH18wPc7c3JlqsM=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useState","Modal","Button","Task","jsxDEV","_jsxDEV","Tasks","_s","isModalOpened","setIsModalOpened","openModal","closeModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","console","_c","$RefreshReg$"],"sources":["/home/anderson/first-react-app/my-app/src/Tasks/Tasks.js"],"sourcesContent":["import React from 'react';\n// import { ReactPropTypes } from 'react';\nimport { useState } from 'react';\n\nimport Modal from '../component/Modal/Modal';\nimport Button from '../component/Button/Button';\nimport Task from '../component/Task/Task';\nimport './Tasks.scss'\n\nconst Tasks = () => {\n\n  \n\n\n    const [isModalOpened, setIsModalOpened] = useState(false);\n\n    const openModal = () => {\n        setIsModalOpened(true);\n    };\n\n    const closeModal = () => {\n        setIsModalOpened(false);\n    };\n    \n    return (\n        <div className='tasks'>\n            <Task></Task>\n            <Button \n                onClick={openModal}\n                >\n                Show modal\n            </Button>\n            {isModalOpened && console}\n            \n        </div>\n    );\n};\n\n\n\nexport default Tasks;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,SAASC,QAAQ,QAAQ,OAAO;AAEhC,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,OAAOC,MAAM,MAAM,4BAA4B;AAC/C,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAO,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErB,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAKhB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEzD,MAAMU,SAAS,GAAGA,CAAA,KAAM;IACpBD,gBAAgB,CAAC,IAAI,CAAC;EAC1B,CAAC;EAED,MAAME,UAAU,GAAGA,CAAA,KAAM;IACrBF,gBAAgB,CAAC,KAAK,CAAC;EAC3B,CAAC;EAED,oBACIJ,OAAA;IAAKO,SAAS,EAAC,OAAO;IAAAC,QAAA,gBAClBR,OAAA,CAACF,IAAI;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAQ,eACbZ,OAAA,CAACH,MAAM;MACHgB,OAAO,EAAER,SAAU;MAAAG,QAAA,EAClB;IAEL;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,EACRT,aAAa,IAAIW,OAAO;EAAA;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEvB;AAEd,CAAC;AAACV,EAAA,CA3BID,KAAK;AAAAc,EAAA,GAALd,KAAK;AA+BX,eAAeA,KAAK;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}