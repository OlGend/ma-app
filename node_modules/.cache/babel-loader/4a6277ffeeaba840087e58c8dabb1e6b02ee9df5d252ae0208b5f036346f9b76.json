{"ast":null,"code":"var _jsxFileName = \"/home/anderson/first-react-app/my-app/src/Tasks/Task/Task.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Modal from '../../component/Modal/Modal';\nimport Button from '../../component/Button/Button';\nimport './Task.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Task = _ref => {\n  _s();\n  let {\n    submittedValue,\n    className,\n    handleSubmit,\n    handleInputChange,\n    inputValue\n  } = _ref;\n  const [isEditModalOpened, setIsEditModalOpened] = useState(false);\n  // const [edditedSubmit, setEdditedSubmit] = useState([]);\n  // const [edditedValue, setInputValue] = useState(\"\");\n\n  const [task, edditedTask] = useState([]);\n  const openModal = () => {\n    setIsEditModalOpened(true);\n  };\n  const closeModal = () => {\n    setIsEditModalOpened(false);\n  };\n  function editTask(event) {\n    event.preventDefault();\n  }\n\n  // function edittedInputChange(event) {\n  //     setInputValue(event.target.value);\n  // };\n\n  // function editSubmit(event) {\n  //     event.preventDefault();\n  //     setEdditedSubmit([{...edditedSubmit, value:edditedValue}])\n  //     closeModal();\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: submittedValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openModal,\n      className: \"button\",\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), isEditModalOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Modal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: editTask,\n          className: `modal ${className}`,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: inputValue,\n            onChange: handleInputChange()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeModal,\n            className: \"button btnForm\",\n            children: \"Change\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(Task, \"dApkI0r/Imall4ceLvkJk/xNSBU=\");\n_c = Task;\nexport default Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["React","useState","Modal","Button","jsxDEV","_jsxDEV","Task","_ref","_s","submittedValue","className","handleSubmit","handleInputChange","inputValue","isEditModalOpened","setIsEditModalOpened","task","edditedTask","openModal","closeModal","editTask","event","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","value","onChange","_c","$RefreshReg$"],"sources":["/home/anderson/first-react-app/my-app/src/Tasks/Task/Task.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nimport Modal from '../../component/Modal/Modal';\nimport Button from '../../component/Button/Button';\nimport './Task.scss'\n\nconst Task = ({ submittedValue, className, handleSubmit, handleInputChange, inputValue }) => {\n\n    const [isEditModalOpened, setIsEditModalOpened] = useState(false);\n    // const [edditedSubmit, setEdditedSubmit] = useState([]);\n    // const [edditedValue, setInputValue] = useState(\"\");\n    \n    const [task, edditedTask] = useState([ ]);\n\n    const openModal = () => {\n        setIsEditModalOpened(true);\n    };\n\n    const closeModal = () => {\n        setIsEditModalOpened(false);\n    };\n\n    function editTask(event) {\n        event.preventDefault();\n    }\n\n    // function edittedInputChange(event) {\n    //     setInputValue(event.target.value);\n    // };\n\n    // function editSubmit(event) {\n    //     event.preventDefault();\n    //     setEdditedSubmit([{...edditedSubmit, value:edditedValue}])\n    //     closeModal();\n    // };\n\n    return (\n        <div className='task'>\n            <h3>{submittedValue}</h3>\n            <button onClick={openModal} className='button'>Edit</button>\n            {isEditModalOpened && (\n                <div className='overlay'>\n                    <div className=\"modal-content\">\n                        <p>Modal</p>\n                        <form onSubmit={editTask} className={`modal ${className}`}>\n                            <input type=\"text\" \n                                value={inputValue}\n                                onChange={handleInputChange()}\n                            />\n                            <button onClick={closeModal} className='button btnForm'>Change</button>\n                        </form>\n                    </div>\n                {/* <Modal\n                    closeModal={closeModal}\n                    handleSubmit={handleSubmit}\n                    handleInputChange={handleInputChange}\n                    inputValue={inputValue}\n                /> */}\n                \n            </div>\n            )}\n        </div>\n    );\n};\n\nexport default Task;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,KAAK,MAAM,6BAA6B;AAC/C,OAAOC,MAAM,MAAM,+BAA+B;AAClD,OAAO,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,IAAI,GAAGC,IAAA,IAAgF;EAAAC,EAAA;EAAA,IAA/E;IAAEC,cAAc;IAAEC,SAAS;IAAEC,YAAY;IAAEC,iBAAiB;IAAEC;EAAW,CAAC,GAAAN,IAAA;EAEpF,MAAM,CAACO,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACjE;EACA;;EAEA,MAAM,CAACe,IAAI,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAG,CAAC;EAEzC,MAAMiB,SAAS,GAAGA,CAAA,KAAM;IACpBH,oBAAoB,CAAC,IAAI,CAAC;EAC9B,CAAC;EAED,MAAMI,UAAU,GAAGA,CAAA,KAAM;IACrBJ,oBAAoB,CAAC,KAAK,CAAC;EAC/B,CAAC;EAED,SAASK,QAAQA,CAACC,KAAK,EAAE;IACrBA,KAAK,CAACC,cAAc,EAAE;EAC1B;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA,oBACIjB,OAAA;IAAKK,SAAS,EAAC,MAAM;IAAAa,QAAA,gBACjBlB,OAAA;MAAAkB,QAAA,EAAKd;IAAc;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACzBtB,OAAA;MAAQuB,OAAO,EAAEV,SAAU;MAACR,SAAS,EAAC,QAAQ;MAAAa,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,EAC3Db,iBAAiB,iBACdT,OAAA;MAAKK,SAAS,EAAC,SAAS;MAAAa,QAAA,eACpBlB,OAAA;QAAKK,SAAS,EAAC,eAAe;QAAAa,QAAA,gBAC1BlB,OAAA;UAAAkB,QAAA,EAAG;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAI,eACZtB,OAAA;UAAMwB,QAAQ,EAAET,QAAS;UAACV,SAAS,EAAG,SAAQA,SAAU,EAAE;UAAAa,QAAA,gBACtDlB,OAAA;YAAOyB,IAAI,EAAC,MAAM;YACdC,KAAK,EAAElB,UAAW;YAClBmB,QAAQ,EAAEpB,iBAAiB;UAAG;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAChC,eACFtB,OAAA;YAAQuB,OAAO,EAAET,UAAW;YAACT,SAAS,EAAC,gBAAgB;YAAAa,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACpE;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACL;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QASb;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACC;AAEd,CAAC;AAACnB,EAAA,CAzDIF,IAAI;AAAA2B,EAAA,GAAJ3B,IAAI;AA2DV,eAAeA,IAAI;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}