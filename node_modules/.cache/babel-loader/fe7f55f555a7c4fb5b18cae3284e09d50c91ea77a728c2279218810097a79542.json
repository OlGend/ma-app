{"ast":null,"code":"var _jsxFileName = \"/home/anderson/first-react-app/my-app/src/Tasks/Task/Task.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Button from '../../component/Button/Button';\nimport './Task.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Task = _ref => {\n  _s();\n  let {\n    clicked,\n    submittedValue\n  } = _ref;\n  const [isEditing, setIsEditing] = useState(false);\n  const [editingValue, setEditingValue] = useState(submittedValue);\n  const handleEdit = () => {\n    setIsEditing(true);\n  };\n  const handleInputChange = event => {\n    setEditingValue(event.target.value);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    setIsEditing(false);\n  };\n  if (isEditing) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: editingValue,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: submittedValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleEdit,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this);\n  }\n};\n_s(Task, \"CB0WH810SSIYa9SsUgIPUuvUkbM=\");\n_c = Task;\nexport default Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["React","useState","Button","jsxDEV","_jsxDEV","Task","_ref","_s","clicked","submittedValue","isEditing","setIsEditing","editingValue","setEditingValue","handleEdit","handleInputChange","event","target","value","handleSubmit","preventDefault","className","children","onSubmit","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/anderson/first-react-app/my-app/src/Tasks/Task/Task.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nimport Button from '../../component/Button/Button';\nimport './Task.scss'\n\nconst Task = ({ clicked, submittedValue }) => {\n    \n    const [isEditing, setIsEditing] = useState(false);\n    const [editingValue, setEditingValue] = useState(submittedValue);\n\n    const handleEdit = () => {\n        setIsEditing(true);\n    };\n\n    const handleInputChange = (event) => {\n        setEditingValue(event.target.value);\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        setIsEditing(false);\n    };\n\n\n    if (isEditing) {\n            return (\n                <div className='task'>\n                    <form onSubmit={handleSubmit}>\n                        <input \n                            type=\"text\" \n                            value={editingValue} \n                            onChange={handleInputChange} \n                        />\n                        <Button type=\"submit\">Save</Button>\n                    </form>\n                </div>\n            );\n        } else {\n            return (\n                <div className='task'>\n                    <h3>{submittedValue}</h3>\n                    <Button onClick={handleEdit}>\n                        Edit\n                    </Button>\n                </div>\n            );\n        }\n    };\n    \n    \nexport default Task;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,MAAM,MAAM,+BAA+B;AAClD,OAAO,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,IAAI,GAAGC,IAAA,IAAiC;EAAAC,EAAA;EAAA,IAAhC;IAAEC,OAAO;IAAEC;EAAe,CAAC,GAAAH,IAAA;EAErC,MAAM,CAACI,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAACQ,cAAc,CAAC;EAEhE,MAAMK,UAAU,GAAGA,CAAA,KAAM;IACrBH,YAAY,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAMI,iBAAiB,GAAIC,KAAK,IAAK;IACjCH,eAAe,CAACG,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACvC,CAAC;EAED,MAAMC,YAAY,GAAIH,KAAK,IAAK;IAC5BA,KAAK,CAACI,cAAc,EAAE;IACtBT,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC;EAGD,IAAID,SAAS,EAAE;IACP,oBACIN,OAAA;MAAKiB,SAAS,EAAC,MAAM;MAAAC,QAAA,eACjBlB,OAAA;QAAMmB,QAAQ,EAAEJ,YAAa;QAAAG,QAAA,gBACzBlB,OAAA;UACIoB,IAAI,EAAC,MAAM;UACXN,KAAK,EAAEN,YAAa;UACpBa,QAAQ,EAAEV;QAAkB;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC9B,eACFzB,OAAA,CAACF,MAAM;UAACsB,IAAI,EAAC,QAAQ;UAAAF,QAAA,EAAC;QAAI;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAChC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACL;EAEd,CAAC,MAAM;IACH,oBACIzB,OAAA;MAAKiB,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACjBlB,OAAA;QAAAkB,QAAA,EAAKb;MAAc;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACzBzB,OAAA,CAACF,MAAM;QAAC4B,OAAO,EAAEhB,UAAW;QAAAQ,QAAA,EAAC;MAE7B;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACP;EAEd;AACJ,CAAC;AAACtB,EAAA,CA1CAF,IAAI;AAAA0B,EAAA,GAAJ1B,IAAI;AA6CV,eAAeA,IAAI;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}