{"ast":null,"code":"var _jsxFileName = \"/home/anderson/first-react-app/my-app/src/Tasks/Task/Task.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Button from '../../component/Button/Button';\nimport './Task.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Task = _ref => {\n  _s();\n  let {\n    clicked,\n    submittedValue\n  } = _ref;\n  const [taskTitle, setTaskTitle] = useState(\"User can edit task\");\n  const handleEditClick = () => {\n    const newTitle = prompt(\"Enter new task title:\");\n    setTaskTitle(newTitle || taskTitle);\n  };\n  if (isEditing) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: editingValue,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: submittedValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleEdit,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this);\n  }\n};\n_s(Task, \"2yENa87ZH5QBlfJMQ2xv/wX50as=\");\n_c = Task;\nexport default Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["React","useState","Button","jsxDEV","_jsxDEV","Task","_ref","_s","clicked","submittedValue","taskTitle","setTaskTitle","handleEditClick","newTitle","prompt","isEditing","className","children","onSubmit","handleSubmit","type","value","editingValue","onChange","handleInputChange","fileName","_jsxFileName","lineNumber","columnNumber","onClick","handleEdit","_c","$RefreshReg$"],"sources":["/home/anderson/first-react-app/my-app/src/Tasks/Task/Task.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nimport Button from '../../component/Button/Button';\nimport './Task.scss'\n\nconst Task = ({ clicked, submittedValue }) => {\n    \n    const [taskTitle, setTaskTitle] = useState(\"User can edit task\");\n\n    const handleEditClick = () => {\n      const newTitle = prompt(\"Enter new task title:\");\n      setTaskTitle(newTitle || taskTitle);\n    };\n\n    if (isEditing) {\n        return (\n            <div className='task'>\n                <form onSubmit={handleSubmit}>\n                    <input \n                        type=\"text\" \n                        value={editingValue} \n                        onChange={handleInputChange} \n                    />\n                    <Button type=\"submit\">Save</Button>\n                </form>\n            </div>\n        );\n        } else {\n            return (\n                <div className='task'>\n                    <h3>{submittedValue}</h3>\n                    <Button onClick={handleEdit}>\n                        Edit\n                    </Button>\n                </div>\n            );\n        }\n    };\n    \n    \nexport default Task;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,MAAM,MAAM,+BAA+B;AAClD,OAAO,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,IAAI,GAAGC,IAAA,IAAiC;EAAAC,EAAA;EAAA,IAAhC;IAAEC,OAAO;IAAEC;EAAe,CAAC,GAAAH,IAAA;EAErC,MAAM,CAACI,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,oBAAoB,CAAC;EAEhE,MAAMW,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,QAAQ,GAAGC,MAAM,CAAC,uBAAuB,CAAC;IAChDH,YAAY,CAACE,QAAQ,IAAIH,SAAS,CAAC;EACrC,CAAC;EAED,IAAIK,SAAS,EAAE;IACX,oBACIX,OAAA;MAAKY,SAAS,EAAC,MAAM;MAAAC,QAAA,eACjBb,OAAA;QAAMc,QAAQ,EAAEC,YAAa;QAAAF,QAAA,gBACzBb,OAAA;UACIgB,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEC,YAAa;UACpBC,QAAQ,EAAEC;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC9B,eACFxB,OAAA,CAACF,MAAM;UAACkB,IAAI,EAAC,QAAQ;UAAAH,QAAA,EAAC;QAAI;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAChC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACL;EAEV,CAAC,MAAM;IACH,oBACIxB,OAAA;MAAKY,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACjBb,OAAA;QAAAa,QAAA,EAAKR;MAAc;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACzBxB,OAAA,CAACF,MAAM;QAAC2B,OAAO,EAAEC,UAAW;QAAAb,QAAA,EAAC;MAE7B;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACP;EAEd;AACJ,CAAC;AAACrB,EAAA,CAhCAF,IAAI;AAAA0B,EAAA,GAAJ1B,IAAI;AAmCV,eAAeA,IAAI;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}