{"ast":null,"code":"var _jsxFileName = \"/home/anderson/first-react-app/my-app/src/Tasks/Tasks.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport Modal from '../component/Modal/Modal';\nimport Button from '../component/Button/Button';\nimport Task from './Task/Task';\nimport './Tasks.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tasks = _ref => {\n  _s();\n  let {\n    onClick,\n    className\n  } = _ref;\n  const [isModalOpened, setIsModalOpened] = useState(false);\n  const [tasks, setTasks] = useState([{\n    id: tasks.length,\n    value: \"Text Here\"\n  }]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [submittedValue, setSubmittedValue] = useState(\"\");\n  const openModal = () => {\n    setIsModalOpened(true);\n  };\n  const closeModal = () => {\n    setIsModalOpened(false);\n  };\n  function handleInputChange(event) {\n    setInputValue(event.target.value);\n  }\n  ;\n  function handleSubmit(event) {\n    event.preventDefault();\n    setTasks([...tasks, {\n      id: tasks.length + 1,\n      value: inputValue\n    }]);\n    closeModal();\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks\",\n    children: [tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n      isModalOpened: isModalOpened,\n      openModal: openModal,\n      submittedValue: task.value,\n      handleInputChange: handleInputChange,\n      inputValue: inputValue\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: openModal,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), isModalOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Modal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: `modal ${className}`,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: inputValue,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeModal,\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button btnForm\",\n            children: \"Add task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(Tasks, \"FMYQI/W6rcTiE1CvRUAPevzcZB0=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useState","Modal","Button","Task","jsxDEV","_jsxDEV","Tasks","_ref","_s","onClick","className","isModalOpened","setIsModalOpened","tasks","setTasks","id","length","value","inputValue","setInputValue","submittedValue","setSubmittedValue","openModal","closeModal","handleInputChange","event","target","handleSubmit","preventDefault","children","map","task","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","_c","$RefreshReg$"],"sources":["/home/anderson/first-react-app/my-app/src/Tasks/Tasks.jsx"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\n\nimport Modal from '../component/Modal/Modal';\nimport Button from '../component/Button/Button';\nimport Task from './Task/Task';\nimport './Tasks.scss'\n\nconst Tasks = ({onClick, className}) => {\n\n    const [isModalOpened, setIsModalOpened] = useState(false);\n    const [tasks, setTasks] = useState([ { id: tasks.length, value: \"Text Here\"} ]);\n    const [inputValue, setInputValue] = useState(\"\");\n    const [submittedValue, setSubmittedValue] = useState(\"\");\n\n    const openModal = () => {\n        setIsModalOpened(true);\n    };\n\n    const closeModal = () => {\n        setIsModalOpened(false);\n    };\n\n    function handleInputChange(event) {\n        setInputValue(event.target.value);\n    };\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        setTasks([...tasks, { id: tasks.length + 1, value: inputValue }]);\n        closeModal();\n    };\n\n    return (\n        <div className='tasks'>\n             {tasks.map((task) => (\n                <Task isModalOpened={isModalOpened} openModal={openModal} key={task.id} submittedValue={task.value} handleInputChange={handleInputChange} inputValue={inputValue}/>\n            ))}\n            <Button onClick={openModal}>\n                Add Task\n            </Button>\n            {isModalOpened && (\n                <div className='overlay'>\n                    <div className=\"modal-content\">\n                        <p>Modal</p>\n                        <form onSubmit={handleSubmit} className={`modal ${className}`}>\n                            <input type=\"text\" \n                                value={inputValue}\n                                onChange={handleInputChange}\n                            />\n                            <button onClick={closeModal}>X</button>\n                            <button className='button btnForm'>Add task</button>\n                        </form>\n                    </div>\n                </div>\n            )}\n            \n        </div>\n    );\n};\n\n\nexport default Tasks;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}