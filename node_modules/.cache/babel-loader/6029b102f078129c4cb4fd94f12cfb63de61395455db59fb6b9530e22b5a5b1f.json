{"ast":null,"code":"var _jsxFileName = \"/home/anderson/first-react-app/my-app/src/Tasks/Task/Task.jsx\",\n  _this = this,\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Modal from '../../component/Modal/Modal';\nimport Button from '../../component/Button/Button';\nimport './Task.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Task = _ref => {\n  _s();\n  let {\n    submittedValue,\n    className,\n    handleInputChange,\n    inputValue\n  } = _ref;\n  return function (handleInputChange) {\n    const [isEditModalOpened, setIsEditModalOpened] = useState(false);\n    const [task, edditedTask] = useState({\n      submittedValue\n    });\n    const [editInputValue, setEditInputValue] = useState(\"\");\n    const openModal = () => {\n      setIsEditModalOpened(true);\n      console.log(task);\n    };\n    const closeModal = () => {\n      setIsEditModalOpened(false);\n    };\n    function handleInputChange(event) {\n      setEditInputValue(event.target.value);\n    }\n    ;\n    function editTask(event) {\n      event.preventDefault();\n      setEditTask([...task, task.editInputValue]);\n    }\n    ;\n    console.log(editInputValue);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: submittedValue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: openModal,\n        className: \"button\",\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, _this), isEditModalOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Modal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: editTask,\n            className: `modal ${className}`,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: editInputValue,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: closeModal,\n              className: \"button btnForm\",\n              children: \"Change\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, _this);\n  }(handleInputChange);\n};\n_s(Task, \"pjQ/xt5UAR1FkvIATg3H1R/xdWM=\");\n_c = Task;\nexport default Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["React","useState","Modal","Button","jsxDEV","_jsxDEV","Task","_ref","_s","submittedValue","className","handleInputChange","inputValue","isEditModalOpened","setIsEditModalOpened","task","edditedTask","editInputValue","setEditInputValue","openModal","console","log","closeModal","event","target","value","editTask","preventDefault","setEditTask","children","fileName","_jsxFileName","lineNumber","columnNumber","_this","onClick","onSubmit","type","onChange","_c","$RefreshReg$"],"sources":["/home/anderson/first-react-app/my-app/src/Tasks/Task/Task.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nimport Modal from '../../component/Modal/Modal';\nimport Button from '../../component/Button/Button';\nimport './Task.scss'\n\nconst Task = ({ submittedValue, className, handleInputChange, inputValue }) => {\n\n    const [isEditModalOpened, setIsEditModalOpened] = useState(false);\n    \n    const [task, edditedTask] = useState({submittedValue});\n    const [editInputValue, setEditInputValue] = useState(\"\");\n\n    const openModal = () => {\n        setIsEditModalOpened(true);\n    console.log(task)\n\n    };\n\n    const closeModal = () => {\n        setIsEditModalOpened(false);\n    };\n    \n    function handleInputChange(event) {\n        setEditInputValue(event.target.value);\n    };\n    function editTask(event) {\n        event.preventDefault();\n        setEditTask([...task, task.editInputValue]);\n    };\n\n    console.log(editInputValue);\n\n    return (\n        <div className='task'>\n            <h3>{submittedValue}</h3>\n            <button onClick={openModal} className='button'>Edit</button>\n            {isEditModalOpened && (\n                <div className='overlay'>\n                    <div className=\"modal-content\">\n                        <p>Modal</p>\n                        <form onSubmit={editTask} className={`modal ${className}`}>\n                            <input type=\"text\" \n                                value={editInputValue}\n                                onChange={handleInputChange}\n                            />\n                            <button onClick={closeModal} className='button btnForm'>Change</button>\n                        </form>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Task;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}