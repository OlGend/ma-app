{"ast":null,"code":"var _jsxFileName = \"/home/anderson/first-react-app/my-app/src/Tasks/Task/Task.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Modal from '../Modal/Modal';\nimport Button from '../Button/Button';\nimport './Task.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Task = _ref => {\n  _s();\n  let {\n    submittedValue\n  } = _ref;\n  const [isModalOpened, setIsModalOpened] = useState(false);\n  const [title, setTitle] = useState(submittedValue);\n  const openModal = () => {\n    setIsModalOpened(true);\n  };\n  const closeModal = () => {\n    setIsModalOpened(false);\n  };\n  const handleTitleChange = newTitle => {\n    setTitle(newTitle);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      clicked: openModal,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), isModalOpened && /*#__PURE__*/_jsxDEV(Modal, {\n      closeModal: closeModal,\n      handleTitleChange: handleTitleChange,\n      currentTitle: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Task, \"zffDJakUJFZuEK8Ms89l/FG6H38=\");\n_c = Task;\nexport default Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["React","useState","Modal","Button","jsxDEV","_jsxDEV","Task","_ref","_s","submittedValue","isModalOpened","setIsModalOpened","title","setTitle","openModal","closeModal","handleTitleChange","newTitle","className","children","fileName","_jsxFileName","lineNumber","columnNumber","clicked","currentTitle","_c","$RefreshReg$"],"sources":["/home/anderson/first-react-app/my-app/src/Tasks/Task/Task.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Modal from '../Modal/Modal';\nimport Button from '../Button/Button';\nimport './Task.scss'\n\nconst Task = ({ submittedValue }) => {\n  const [isModalOpened, setIsModalOpened] = useState(false);\n  const [title, setTitle] = useState(submittedValue);\n\n  const openModal = () => {\n    setIsModalOpened(true);\n  };\n\n  const closeModal = () => {\n    setIsModalOpened(false);\n  };\n\n  const handleTitleChange = (newTitle) => {\n    setTitle(newTitle);\n  };\n\n  return (\n    <div className='task'>\n      <h3>{title}</h3>\n      <Button clicked={openModal}>Edit</Button>\n      {isModalOpened && (\n        <Modal\n          closeModal={closeModal}\n          handleTitleChange={handleTitleChange}\n          currentTitle={title}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Task;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,MAAM,MAAM,kBAAkB;AACrC,OAAO,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,IAAI,GAAGC,IAAA,IAAwB;EAAAC,EAAA;EAAA,IAAvB;IAAEC;EAAe,CAAC,GAAAF,IAAA;EAC9B,MAAM,CAACG,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAACQ,cAAc,CAAC;EAElD,MAAMK,SAAS,GAAGA,CAAA,KAAM;IACtBH,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAMI,UAAU,GAAGA,CAAA,KAAM;IACvBJ,gBAAgB,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,MAAMK,iBAAiB,GAAIC,QAAQ,IAAK;IACtCJ,QAAQ,CAACI,QAAQ,CAAC;EACpB,CAAC;EAED,oBACEZ,OAAA;IAAKa,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBd,OAAA;MAAAc,QAAA,EAAKP;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAChBlB,OAAA,CAACF,MAAM;MAACqB,OAAO,EAAEV,SAAU;MAAAK,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,EACxCb,aAAa,iBACZL,OAAA,CAACH,KAAK;MACJa,UAAU,EAAEA,UAAW;MACvBC,iBAAiB,EAAEA,iBAAkB;MACrCS,YAAY,EAAEb;IAAM;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEvB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEV,CAAC;AAACf,EAAA,CA7BIF,IAAI;AAAAoB,EAAA,GAAJpB,IAAI;AA+BV,eAAeA,IAAI;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}