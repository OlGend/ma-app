{"ast":null,"code":"var _jsxFileName = \"/home/anderson/first-react-app/my-app/src/Tasks/Task/Task.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Modal from '../../component/Modal/Modal';\nimport Button from '../../component/Button/Button';\nimport './Task.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Task = _ref => {\n  _s();\n  let {\n    submittedValue,\n    className\n  } = _ref;\n  const [isEditModalOpened, setIsEditModalOpened] = useState(false);\n  const [task, setTask] = useState({\n    value: submittedValue\n  });\n  const [editInputValue, setEditInputValue] = useState(\"\");\n  const openModal = () => {\n    setIsEditModalOpened(true);\n    console.log(\"submitedValue\", task);\n    console.log(\"EditedInputValue\", editInputValue);\n  };\n  const closeModal = () => {\n    setIsEditModalOpened(false);\n  };\n  function editHandleInputChange(event) {\n    setEditInputValue(event.target.value);\n  }\n  ;\n  function editTask(event) {\n    event.preventDefault();\n    setTask({\n      ...task,\n      value: editInputValue\n    });\n    console.log(task);\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: task.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openModal,\n      className: \"button\",\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), isEditModalOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Modal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: editTask,\n          action: \"#\",\n          className: `modal ${className}`,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: editInputValue,\n            onChange: editHandleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: closeModal,\n            className: \"button btnForm\",\n            children: \"Change\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(Task, \"bTYoP/bhrc2SdyBP7fkiHNMxi0o=\");\n_c = Task;\nexport default Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["React","useState","Modal","Button","jsxDEV","_jsxDEV","Task","_ref","_s","submittedValue","className","isEditModalOpened","setIsEditModalOpened","task","setTask","value","editInputValue","setEditInputValue","openModal","console","log","closeModal","editHandleInputChange","event","target","editTask","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","action","type","onChange","_c","$RefreshReg$"],"sources":["/home/anderson/first-react-app/my-app/src/Tasks/Task/Task.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nimport Modal from '../../component/Modal/Modal';\nimport Button from '../../component/Button/Button';\nimport './Task.scss'\n\nconst Task = ({ submittedValue, className }) => {\n\n    const [isEditModalOpened, setIsEditModalOpened] = useState(false);\n    \n    const [task, setTask] = useState({value:submittedValue});\n    const [editInputValue, setEditInputValue] = useState(\"\");\n\n    const openModal = () => {\n        setIsEditModalOpened(true);\n    console.log(\"submitedValue\", task)\n    console.log(\"EditedInputValue\", editInputValue);\n\n    };\n\n    const closeModal = () => {\n        setIsEditModalOpened(false);\n    };\n    \n    function editHandleInputChange(event) {\n        setEditInputValue(event.target.value);\n    };\n    function editTask(event) {\n        event.preventDefault();\n        setTask({...task, value: editInputValue});\n        console.log(task);\n    };\n\n\n    return (\n        <div className='task'>\n            <h3>{task.value}</h3>\n            <button onClick={openModal} className='button'>Edit</button>\n            {isEditModalOpened && (\n                <div className='overlay'>\n                    <div className=\"modal-content\">\n                        <p>Modal</p>\n                        <form onSubmit={editTask} action=\"#\" className={`modal ${className}`}>\n                            <input type=\"text\" \n                                value={editInputValue}\n                                onChange={editHandleInputChange}\n                            />\n                            <button onClick={closeModal} className='button btnForm'>Change</button>\n                        </form>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Task;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}