{"ast":null,"code":"var _jsxFileName = \"/home/anderson/first-react-app/my-app/src/Tasks/Tasks.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport Modal from '../component/Modal/Modal';\nimport Button from '../component/Button/Button';\nimport Task from './Task/Task';\nimport './Tasks.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tasks = _ref => {\n  _s();\n  let {\n    onClick,\n    className\n  } = _ref;\n  const [isModalOpened, setIsModalOpened] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [submittedValue, setSubmittedValue] = useState(\"\");\n  const openModal = () => {\n    setIsModalOpened(true);\n    console.log(tasks);\n  };\n  const closeModal = () => {\n    setIsModalOpened(false);\n  };\n  function handleInputChange(event) {\n    setInputValue(event.target.value);\n  }\n  ;\n  function handleSubmit(event) {\n    event.preventDefault();\n    setTasks([...tasks, {\n      id: tasks.length + 1,\n      value: inputValue\n    }]);\n    closeModal();\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks\",\n    children: [tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n      isModalOpened: isModalOpened,\n      openModal: openModal,\n      submittedValue: task.value,\n      handleSubmit: true\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: openModal,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), isModalOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Modal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: `modal ${className}`,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: inputValue,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button btnForm\",\n            children: \"Change\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(Tasks, \"APbcSdq+g40kZeRKLxltKfyb+s4=\");\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","useState","Modal","Button","Task","jsxDEV","_jsxDEV","Tasks","_ref","_s","onClick","className","isModalOpened","setIsModalOpened","tasks","setTasks","inputValue","setInputValue","submittedValue","setSubmittedValue","openModal","console","log","closeModal","handleInputChange","event","target","value","handleSubmit","preventDefault","id","length","children","map","task","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","_c","$RefreshReg$"],"sources":["/home/anderson/first-react-app/my-app/src/Tasks/Tasks.jsx"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\n\nimport Modal from '../component/Modal/Modal';\nimport Button from '../component/Button/Button';\nimport Task from './Task/Task';\nimport './Tasks.scss'\n\nconst Tasks = ({onClick, className}) => {\n\n    const [isModalOpened, setIsModalOpened] = useState(false);\n    const [tasks, setTasks] = useState([ ]);\n    const [inputValue, setInputValue] = useState(\"\");\n    const [submittedValue, setSubmittedValue] = useState(\"\");\n\n    const openModal = () => {\n        setIsModalOpened(true);\n        console.log(tasks)\n    };\n\n    const closeModal = () => {\n        setIsModalOpened(false);\n    };\n\n    function handleInputChange(event) {\n        setInputValue(event.target.value);\n    };\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        setTasks([...tasks, { id: tasks.length + 1, value: inputValue }]);\n        closeModal();\n    };\n\n    return (\n        <div className='tasks'>\n             {tasks.map((task) => (\n                <Task isModalOpened={isModalOpened} openModal={openModal} key={task.id} submittedValue={task.value} handleSubmit />\n            ))}\n            <Button onClick={openModal}>\n                Add Task\n            </Button>\n            {isModalOpened && (\n                <div className='overlay'>\n                    <div className=\"modal-content\">\n                        <p>Modal</p>\n                        <form onSubmit={handleSubmit} className={`modal ${className}`}>\n                            <input type=\"text\" \n                                value={inputValue}\n                                onChange={handleInputChange}\n                            />\n                            <button className='button btnForm'>Change</button>\n                        </form>\n                    </div>\n                    {/* <Modal\n                        closeModal={closeModal}\n                        handleSubmit={handleSubmit}\n                        handleInputChange={handleInputChange}\n                        inputValue={inputValue}\n                    /> */}\n                    \n                </div>\n            )}\n            \n        </div>\n    );\n};\n\n\nexport default Tasks;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}