{"ast":null,"code":"var _jsxFileName = \"/home/anderson/first-react-app/my-app/src/Tasks/Task/Task.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Modal from '../../component/Modal/Modal';\nimport Button from '../../component/Button/Button';\nimport './Task.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Task = _ref => {\n  _s();\n  let {\n    submittedValue,\n    inputValue,\n    className\n  } = _ref;\n  const [isEditModalOpened, setIsEditModalOpened] = useState(false);\n  const [edditedSubmit, setEdditedSubmit] = useState([submittedValue]);\n  const openModal = () => {\n    setIsEditModalOpened(true);\n    console.log(inputValue);\n  };\n  const closeModal = () => {\n    setIsEditModalOpened(false);\n  };\n  function edittedInputChange(event) {\n    setInputValue(event.target.value);\n  }\n  ;\n  function editSubmit(event) {\n    event.preventDefault();\n    setEdditedSubmit([{\n      ...edditedSubmit,\n      value: inputValue\n    }]);\n  }\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: submittedValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openModal,\n      className: \"button\",\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), isEditModalOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Modal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: editSubmit,\n          className: `modal ${className}`,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: inputValue,\n            onChange: edittedInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            closeModal: closeModal,\n            className: \"button btnForm\",\n            children: \"Change\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(Task, \"xy8fLY9L2AYzlIS/sHBCveHSrT8=\");\n_c = Task;\nexport default Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["React","useState","Modal","Button","jsxDEV","_jsxDEV","Task","_ref","_s","submittedValue","inputValue","className","isEditModalOpened","setIsEditModalOpened","edditedSubmit","setEdditedSubmit","openModal","console","log","closeModal","edittedInputChange","event","setInputValue","target","value","editSubmit","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","type","onChange","_c","$RefreshReg$"],"sources":["/home/anderson/first-react-app/my-app/src/Tasks/Task/Task.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nimport Modal from '../../component/Modal/Modal';\nimport Button from '../../component/Button/Button';\nimport './Task.scss'\n\nconst Task = ({ submittedValue, inputValue, className }) => {\n\n    const [isEditModalOpened, setIsEditModalOpened] = useState(false);\n    const [edditedSubmit, setEdditedSubmit] = useState([submittedValue]);\n\n    const openModal = () => {\n        setIsEditModalOpened(true);\n        console.log(inputValue);\n    };\n\n    const closeModal = () => {\n        setIsEditModalOpened(false);\n    };\n\n    function edittedInputChange(event) {\n        setInputValue(event.target.value);\n    };\n\n    function editSubmit(event) {\n        event.preventDefault();\n        setEdditedSubmit([{...edditedSubmit, value:inputValue}])\n    };\n\n    return (\n        <div className='task'>\n            <h3>{submittedValue}</h3>\n            <button onClick={openModal} className='button'>Edit</button>\n            {isEditModalOpened && (\n                <div className='overlay'>\n                    <div className=\"modal-content\">\n                        <p>Modal</p>\n                        <form onSubmit={editSubmit} className={`modal ${className}`}>\n                            <input type=\"text\" \n                                value={inputValue}\n                                onChange={edittedInputChange}\n                            />\n                            <button closeModal={closeModal} className='button btnForm'>Change</button>\n                        </form>\n                    </div>\n                {/* <Modal\n                    closeModal={closeModal}\n                    handleSubmit={handleSubmit}\n                    handleInputChange={handleInputChange}\n                    inputValue={inputValue}\n                /> */}\n                \n            </div>\n            )}\n        </div>\n    );\n};\n\nexport default Task;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,OAAOC,KAAK,MAAM,6BAA6B;AAC/C,OAAOC,MAAM,MAAM,+BAA+B;AAClD,OAAO,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,IAAI,GAAGC,IAAA,IAA+C;EAAAC,EAAA;EAAA,IAA9C;IAAEC,cAAc;IAAEC,UAAU;IAAEC;EAAU,CAAC,GAAAJ,IAAA;EAEnD,MAAM,CAACK,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,CAACQ,cAAc,CAAC,CAAC;EAEpE,MAAMO,SAAS,GAAGA,CAAA,KAAM;IACpBH,oBAAoB,CAAC,IAAI,CAAC;IAC1BI,OAAO,CAACC,GAAG,CAACR,UAAU,CAAC;EAC3B,CAAC;EAED,MAAMS,UAAU,GAAGA,CAAA,KAAM;IACrBN,oBAAoB,CAAC,KAAK,CAAC;EAC/B,CAAC;EAED,SAASO,kBAAkBA,CAACC,KAAK,EAAE;IAC/BC,aAAa,CAACD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC;EACrC;EAAC;EAED,SAASC,UAAUA,CAACJ,KAAK,EAAE;IACvBA,KAAK,CAACK,cAAc,EAAE;IACtBX,gBAAgB,CAAC,CAAC;MAAC,GAAGD,aAAa;MAAEU,KAAK,EAACd;IAAU,CAAC,CAAC,CAAC;EAC5D;EAAC;EAED,oBACIL,OAAA;IAAKM,SAAS,EAAC,MAAM;IAAAgB,QAAA,gBACjBtB,OAAA;MAAAsB,QAAA,EAAKlB;IAAc;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACzB1B,OAAA;MAAQ2B,OAAO,EAAEhB,SAAU;MAACL,SAAS,EAAC,QAAQ;MAAAgB,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS,EAC3DnB,iBAAiB,iBACdP,OAAA;MAAKM,SAAS,EAAC,SAAS;MAAAgB,QAAA,eACpBtB,OAAA;QAAKM,SAAS,EAAC,eAAe;QAAAgB,QAAA,gBAC1BtB,OAAA;UAAAsB,QAAA,EAAG;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAI,eACZ1B,OAAA;UAAM4B,QAAQ,EAAER,UAAW;UAACd,SAAS,EAAG,SAAQA,SAAU,EAAE;UAAAgB,QAAA,gBACxDtB,OAAA;YAAO6B,IAAI,EAAC,MAAM;YACdV,KAAK,EAAEd,UAAW;YAClByB,QAAQ,EAAEf;UAAmB;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAC/B,eACF1B,OAAA;YAAQc,UAAU,EAAEA,UAAW;YAACR,SAAS,EAAC,gBAAgB;YAAAgB,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACvE;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACL;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QASb;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACC;AAEd,CAAC;AAACvB,EAAA,CAlDIF,IAAI;AAAA8B,EAAA,GAAJ9B,IAAI;AAoDV,eAAeA,IAAI;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}